apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent-recruiter-frontend
  namespace: ai-agent-recruiter
  labels:
    app: ai-agent-recruiter
    component: frontend
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-agent-recruiter
      component: frontend
  template:
    metadata:
      labels:
        app: ai-agent-recruiter
        component: frontend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "false"
    spec:
      serviceAccountName: ai-agent-recruiter-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: frontend
        image: your-registry/ai-agent-recruiter-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: REACT_APP_API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: ai-agent-recruiter-config
              key: REACT_APP_API_BASE_URL
        - name: NODE_ENV
          value: "production"
        - name: GENERATE_SOURCEMAP
          value: "false"
        - name: REACT_APP_VERSION
          value: "v1.0.0"
        - name: REACT_APP_ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: tmp-volume
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent-recruiter-frontend
  namespace: ai-agent-recruiter-staging
  labels:
    app: ai-agent-recruiter
    component: frontend
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-agent-recruiter
      component: frontend
  template:
    metadata:
      labels:
        app: ai-agent-recruiter
        component: frontend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "false"
    spec:
      serviceAccountName: ai-agent-recruiter-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: frontend
        image: your-registry/ai-agent-recruiter-frontend:staging
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: REACT_APP_API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: ai-agent-recruiter-config
              key: REACT_APP_API_BASE_URL
        - name: NODE_ENV
          value: "staging"
        - name: GENERATE_SOURCEMAP
          value: "true"
        - name: REACT_APP_VERSION
          value: "v1.0.0-staging"
        - name: REACT_APP_ENVIRONMENT
          value: "staging"
        resources:
          requests:
            memory: "64Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "50m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: tmp-volume
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent-recruiter-frontend
  namespace: ai-agent-recruiter-dev
  labels:
    app: ai-agent-recruiter
    component: frontend
    version: v1.0.0
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-agent-recruiter
      component: frontend
  template:
    metadata:
      labels:
        app: ai-agent-recruiter
        component: frontend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "false"
    spec:
      serviceAccountName: ai-agent-recruiter-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: frontend
        image: your-registry/ai-agent-recruiter-frontend:dev
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: REACT_APP_API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: ai-agent-recruiter-config
              key: REACT_APP_API_BASE_URL
        - name: NODE_ENV
          value: "development"
        - name: GENERATE_SOURCEMAP
          value: "true"
        - name: REACT_APP_VERSION
          value: "v1.0.0-dev"
        - name: REACT_APP_ENVIRONMENT
          value: "development"
        resources:
          requests:
            memory: "64Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "50m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: tmp-volume
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30